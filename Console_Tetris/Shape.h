#pragma once

#include "value.h"

class CShape
{
public:
	CShape();
	~CShape();

private:
	char		m_cShape[4][4];
	char		m_cNextShape[4][4];
	// 도형의 기준위치
	POSITION	m_tPos;

	// 도형의 방향을 지정 상,하,좌,우
	int			m_iDir;
	int			m_iNowType;

	// Shape : O J L I S T Z
	// Rotation : Up, Right, Down, Left
	// 공백은 9 이고 도형들은 위의 순서대로 0~6까지 부여.
	char		m_cBlocks[7][4][4][4] = {
		{ { '9','9','9','9','9','9','9','9','0','0','9','9','0','0','9','9' },{ '9','9','9','9','9','9','9','9','0','0','9','9','0','0','9','9' },
	{ '9','9','9','9','9','9','9','9','0','0','9','9','0','0','9','9' },{ '9','9','9','9','9','9','9','9','0','0','9','9','0','0','9','9' } },
	{ { '9','9','9','9','9','1','9','9','9','1','9','9','1','1','9','9' },{ '9','9','9','9','9','9','9','9','1','9','9','9','1','1','1','9' },
	{ '9','9','9','9','1','1','9','9','1','9','9','9','1','9','9','9' },{ '9','9','9','9','9','9','9','9','1','1','1','9','9','9','1','9' } },
	{ { '9','9','9','9','2','9','9','9','2','9','9','9','2','2','9','9' },{ '9','9','9','9','9','9','9','9','2','2','2','9','2','9','9','9' },
	{ '9','9','9','9','2','2','9','9','9','2','9','9','9','2','9','9' },{ '9','9','9','9','9','9','9','9','9','9','2','9','2','2','2','9' } },
	{ { '3','9','9','9','3','9','9','9','3','9','9','9','3','9','9','9' },{ '9','9','9','9','9','9','9','9','9','9','9','9','3','3','3','3' },
	{ '3','9','9','9','3','9','9','9','3','9','9','9','3','9','9','9' },{ '9','9','9','9','9','9','9','9','9','9','9','9','3','3','3','3' } },
	{ { '9','9','9','9','4','9','9','9','4','4','9','9','9','4','9','9' },{ '9','9','9','9','9','9','9','9','9','4','4','9','4','4','9','9' },
	{ '9','9','9','9','4','9','9','9','4','4','9','9','9','4','9','9' },{ '9','9','9','9','9','9','9','9','9','4','4','9','4','4','9','9' } },
	{ { '9','9','9','9','9','9','9','9','9','5','9','9','5','5','5','9' },{ '9','9','9','9','5','9','9','9','5','5','9','9','5','9','9','9' },
	{ '9','9','9','9','9','9','9','9','5','5','5','9','9','5','9','9' },{ '9','9','9','9','9','5','9','9','5','5','9','9','9','5','9','9' } },
	{ { '9','9','9','9','9','6','9','9','6','6','9','9','6','9','9','9' },{ '9','9','9','9','9','9','9','9','6','6','9','9','9','6','6','9' },
	{ '9','9','9','9','9','6','9','9','6','6','9','9','6','9','9','9' },{ '9','9','9','9','9','9','9','9','6','6','9','9','9','6','6','9' } }
	};

public:
	char GetBlock(int x, int y)	const
	{
		return m_cShape[y][x];
	}

	void SetPosition(int x, int y)
	{
		m_tPos.x = x;
		m_tPos.y = y;
	}

	// 도형의 위치를 얻어온다.
	POSITION GetPosition() const
	{
		return m_tPos;
	}

public:
	bool Init(SHAPE_TYPE eType);
	void Render();
	void RenderNext();
	bool MoveDown();
	void MoveLeft();
	void MoveRight();
	void Rotation();
};

